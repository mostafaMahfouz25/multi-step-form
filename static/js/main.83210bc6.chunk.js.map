{"version":3,"sources":["components/FormUserDetails.js","components/FormPersonalDetails.js","components/Confirm.js","components/Success.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","continue","e","preventDefault","props","nextStep","this","values","handleChange","Fragment","className","type","placeholder","onChange","value","firstName","lastName","email","style","styles","button","onClick","Component","margin","FormPersonalDetails","back","prevStep","ocupation","city","bio","Confirm","Success","UserForm","state","step","setState","input","target","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.83210bc6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nexport class FormUserDetails extends Component {\r\n\r\n    continue = e =>{\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n        const {values,handleChange} = this.props;\r\n        return (\r\n    \r\n                <React.Fragment>\r\n                    <h1 className=\"bg-primary p-2 my-2 text-white border\">Enter User Details</h1>\r\n                    <input type=\"text\" placeholder=\"Enter Your First Name\" className=\"form-control\" \r\n                    onChange={handleChange('firstName')} \r\n                    value={values.firstName} />\r\n                    <br/>\r\n                    <input type=\"text\" placeholder=\"Enter Your Last Name\"    className=\"form-control\"\r\n                    onChange={handleChange('lastName')} \r\n                    value={values.lastName} />\r\n                    <br />\r\n                    <input type=\"text\" placeholder=\"Enter Your Email\"   className=\"form-control\"\r\n                    onChange={handleChange('email')} \r\n                    value={values.email} />\r\n                    <br />\r\n                    <button className=\"btn btn-success\" style={styles.button}  onClick={this.continue} > Continue </button>\r\n                    \r\n                </React.Fragment>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button:{\r\n        margin:15\r\n    }\r\n}\r\n\r\nexport default FormUserDetails\r\n","import React, { Component } from 'react';\r\n\r\n\r\nexport class FormPersonalDetails extends Component {\r\n\r\n    continue = e =>{\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e =>{\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {values,handleChange} = this.props;\r\n        return (\r\n      \r\n            <React.Fragment>\r\n                <h1 className=\"bg-primary p-2 my-2 text-white border\"> Enter Personal Details </h1>\r\n                <input type=\"text\" placeholder=\"Enter Your Ocubation\" className=\"form-control\"\r\n                onChange={handleChange('ocupation')} \r\n                value={values.ocupation} />\r\n                <br/>\r\n                <input type=\"text\" placeholder=\"Enter Your City\" className=\"form-control\"\r\n                onChange={handleChange('city')} \r\n                value={values.city} />\r\n                <br />\r\n                <input type=\"text\" placeholder=\"Enter Your Bio\" className=\"form-control\" \r\n                onChange={handleChange('bio')} \r\n                value={values.bio} />\r\n                <br />\r\n                <button  className=\"btn btn-success\" style={styles.button}  onClick={this.continue} > Continue </button>\r\n                <button   className=\"btn btn-danger\"  style={styles.button}  onClick={this.back} > Back </button>\r\n                \r\n            </React.Fragment>\r\n      \r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button:{\r\n        margin:15\r\n    }\r\n}\r\n\r\nexport default FormPersonalDetails\r\n","import React, { Component } from 'react';\r\n\r\n\r\nexport class Confirm extends Component {\r\n\r\n    continue = e =>{\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e =>{\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {values} = this.props;\r\n        return (\r\n      \r\n            <React.Fragment>\r\n                <h1 className=\"bg-primary p-2 my-2 text-white border\"> Confirm Personal Details </h1>\r\n                    \r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{values.firstName}</li>\r\n                    <li className=\"list-group-item\">{values.lastName}</li>\r\n                    <li className=\"list-group-item\">{values.email}</li>\r\n                    <li className=\"list-group-item\">{values.ocupation}</li>\r\n                    <li className=\"list-group-item\">{values.city}</li>\r\n                    <li className=\"list-group-item\">{values.bio}</li>\r\n                </ul>\r\n                 \r\n                <button  className=\"btn btn-success\" style={styles.button}  onClick={this.continue} >Confirm & Continue </button>\r\n                <button   className=\"btn btn-danger\"  style={styles.button}  onClick={this.back} > Back </button>\r\n                \r\n            </React.Fragment>\r\n      \r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button:{\r\n        margin:15\r\n    }\r\n}\r\n\r\nexport default Confirm\r\n","import React, { Component } from 'react';\r\n\r\n\r\nexport class Success extends Component {\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n      \r\n            <React.Fragment>\r\n                <h1 className=\" display-4 p-2 my-2 border\"> Thank You For Your Submission </h1>  \r\n            </React.Fragment>\r\n      \r\n        )\r\n    }\r\n}\r\n\r\nexport default Success\r\n","import React, { Component } from 'react';\r\nimport FormUserDetails from './FormUserDetails';\r\nimport FormPersonalDetails from './FormPersonalDetails';\r\nimport Confirm from './Confirm';\r\nimport Success from './Success';\r\n\r\nexport class UserForm extends Component {\r\n\r\n    state = {\r\n        step:1,\r\n        firstName:'',\r\n        lastName:'',\r\n        email:'',\r\n        ocupation:'',\r\n        city:'',\r\n        bio:'',\r\n    }\r\n\r\n    nextStep = ()=>{\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step:step+1\r\n        })\r\n    }\r\n\r\n    prevStep = ()=>{\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step:step-1\r\n        })\r\n    }\r\n\r\n    handleChange = input => e =>{\r\n        this.setState({\r\n            [input]:e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {step} = this.state;\r\n        const {firstName,lastName,email,ocupation,bio,city} = this.state;\r\n        const values = {firstName,lastName,email,ocupation,bio,city};\r\n        \r\n        switch(step)\r\n        {\r\n            case 1:\r\n                return (\r\n                    <FormUserDetails nextStep={this.nextStep}   handleChange={this.handleChange} values={values} />\r\n                )\r\n            case 2:\r\n                return (\r\n                    <FormPersonalDetails nextStep={this.nextStep} prevStep={this.prevStep}  handleChange={this.handleChange} values={values} />\r\n                )\r\n            case 3:\r\n                return <Confirm nextStep={this.nextStep} prevStep={this.prevStep} values={values}  />\r\n            case 4:\r\n                return <Success  values={values}  />\r\n\r\n    \r\n        }\r\n    }\r\n}\r\n\r\nexport default UserForm\r\n","import React from 'react';\nimport './App.css';\nimport UserForm from './components/UserForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n          <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-6 mx-auto border p-3\">\n                    <UserForm />\n                </div>\n            </div>\n          </div>\n          \n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}